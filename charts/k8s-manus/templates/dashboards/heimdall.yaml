{{- if .Values.dashboards.heimdall.enabled }}
---
# Heimdall Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: heimdall
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: heimdall
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.dashboards.heimdall.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: heimdall
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: heimdall
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: dashboard
    spec:
      containers:
      - name: heimdall
        image: "{{ .Values.images.heimdall.repository }}:{{ .Values.images.heimdall.tag }}"
        imagePullPolicy: {{ .Values.images.heimdall.pullPolicy }}
        ports:
        - containerPort: 80
          name: http
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: "UTC"
        volumeMounts:
        - name: heimdall-storage
          mountPath: /config
        resources:
          {{- toYaml .Values.dashboards.heimdall.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: heimdall-storage
        persistentVolumeClaim:
          claimName: heimdall-pvc

---
# Heimdall Service
apiVersion: v1
kind: Service
metadata:
  name: heimdall
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: heimdall
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: dashboard
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: heimdall
    app.kubernetes.io/instance: {{ .Release.Name }}

{{- if .Values.networking.nodePort.enabled }}
---
# Heimdall NodePort Service
apiVersion: v1
kind: Service
metadata:
  name: heimdall-nodeport
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: heimdall
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: dashboard
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: http
    nodePort: 30808
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: heimdall
    app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}
{{- end }}

