{{- if .Values.databases.mysql.enabled }}
---
# MySQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: database
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: database
    spec:
      containers:
      - name: mysql
        image: "{{ .Values.images.mysql.repository }}:{{ .Values.images.mysql.tag }}"
        imagePullPolicy: {{ .Values.images.mysql.pullPolicy }}
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: mysql-root-password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: mysql-database
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: mysql-username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: mysql-password
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
        resources:
          {{- toYaml .Values.databases.mysql.resources | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc

---
# MySQL Service
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
  - port: 3306
    targetPort: mysql
    protocol: TCP
    name: mysql
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: {{ .Release.Name }}

{{- if .Values.networking.nodePort.enabled }}
---
# MySQL NodePort Service
apiVersion: v1
kind: Service
metadata:
  name: mysql-nodeport
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: database
spec:
  type: NodePort
  ports:
  - port: 3306
    targetPort: mysql
    nodePort: 30306
    protocol: TCP
    name: mysql
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}
{{- end }}

