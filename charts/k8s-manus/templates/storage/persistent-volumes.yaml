{{- if .Values.storage.persistentVolumes.enabled }}
---
# PostgreSQL Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: database
spec:
  accessModes:
    - {{ .Values.storage.accessMode }}
  storageClassName: {{ .Values.storage.storageClass }}
  resources:
    requests:
      storage: {{ .Values.databases.postgres.storage }}

---
# MySQL Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: database
spec:
  accessModes:
    - {{ .Values.storage.accessMode }}
  storageClassName: {{ .Values.storage.storageClass }}
  resources:
    requests:
      storage: {{ .Values.databases.mysql.storage }}

---
# Redis Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: database
spec:
  accessModes:
    - {{ .Values.storage.accessMode }}
  storageClassName: {{ .Values.storage.storageClass }}
  resources:
    requests:
      storage: {{ .Values.databases.redis.storage }}

---
# Grafana Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: application
spec:
  accessModes:
    - {{ .Values.storage.accessMode }}
  storageClassName: {{ .Values.storage.storageClass }}
  resources:
    requests:
      storage: 5Gi

---
# Authentik Media Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: authentik-media-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: authentik
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: authentication
spec:
  accessModes:
    - {{ .Values.storage.accessMode }}
  storageClassName: {{ .Values.storage.storageClass }}
  resources:
    requests:
      storage: 5Gi

---
# PgAdmin Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgadmin-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: pgadmin
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: application
spec:
  accessModes:
    - {{ .Values.storage.accessMode }}
  storageClassName: {{ .Values.storage.storageClass }}
  resources:
    requests:
      storage: 2Gi

---
# Heimdall Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: heimdall-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: heimdall
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: dashboard
spec:
  accessModes:
    - {{ .Values.storage.accessMode }}
  storageClassName: {{ .Values.storage.storageClass }}
  resources:
    requests:
      storage: 1Gi

---
# Homer Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: homer-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: homer
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: dashboard
spec:
  accessModes:
    - {{ .Values.storage.accessMode }}
  storageClassName: {{ .Values.storage.storageClass }}
  resources:
    requests:
      storage: 1Gi
{{- end }}

